---
format_version: "17"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other

trigger_map:
- push_branch: master
  pipeline: ci
- pull_request_source_branch: "*"
  pipeline: ci
- tag: "*.*.*"
  workflow: release
  enabled: false

pipelines:
  ci:
    stages:
    - run_tests: { }

stages:
  run_tests:
    workflows:
    - run_lint: { }
    - run_unit_tests_macos: { }
    - run_unit_tests_linux: { }
    - run_integration_tests_macos: { }
    - run_integration_tests_linux: { }
    - test_binary_build_macos: { }
    - test_binary_build_linux: { }

workflows:
  run_lint:
    steps:
    - bundle::run_lint: { }

  run_unit_tests_macos:
    steps:
    - bundle::run_unit_tests: { }
    meta:
      bitrise.io:
        stack: osx-xcode-16.0.x
        machine_type_id: g2.mac.large

  run_unit_tests_linux:
    steps:
    - bundle::run_unit_tests: { }
    meta:
      bitrise.io:
        machine_type_id: elite-xl
        stack: linux-docker-android-22.04

  run_integration_tests_macos:
    steps:
    - bundle::run_integration_tests: { }
    meta:
      bitrise.io:
        stack: osx-xcode-16.0.x
        machine_type_id: g2.mac.large

  run_integration_tests_linux:
    steps:
    - bundle::run_integration_tests: { }
    meta:
      bitrise.io:
        machine_type_id: elite-xl
        stack: linux-docker-android-22.04

  test_binary_build_macos:
    steps:
    - bundle::test_binary_build: { }
    meta:
      bitrise.io:
        stack: osx-xcode-16.0.x
        machine_type_id: g2.mac.large

  test_binary_build_linux:
    steps:
    - bundle::test_binary_build: { }
    meta:
      bitrise.io:
        machine_type_id: elite-xl
        stack: linux-docker-android-22.04

  release:
    steps:
    - trigger-bitrise-workflow@0.0.8:
        inputs:
        - api_token: "$CONTROL_CENTER_TRIGGER_KEY"
        - workflow_id: binary-tool-release
        - exported_environment_variable_names: GIT_REPOSITORY_URL
        - app_slug: "$CONTROL_CENTER_APP_SLUG"
    meta:
      bitrise.io:
        machine_type_id: elite-xl
        stack: linux-docker-android-22.04


step_bundles:
  run_lint:
    steps:
    - script@1:
        title: Setup YAML lint
        inputs:
        - script_file_path:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -ex
            apt-get update
            apt-get --assume-yes install python3.8-venv
    - git-clone:
        inputs:
        - fetch_tags: "yes"
    - git::https://github.com/bitrise-steplib/steps-check.git:
        inputs:
        - workflow: lint
        - skip_step_yml_validation: "yes"
    - deploy-to-bitrise-io: { }

  run_unit_tests:
    steps:
    - git-clone:
        inputs:
        - fetch_tags: "yes"
    - go-list: { }
    - script:
        title: Go test
        inputs:
        - content: go test -p 1 $BITRISE_GO_PACKAGES
    - deploy-to-bitrise-io: { }

  run_integration_tests:
    steps:
    - git-clone:
        inputs:
        - fetch_tags: "yes"
    - script:
        title: Run integration tests
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            
            current_bitrise="$(pwd)/_tmp/test_bitrise"
            export CGO_ENABLED=0
            go build -o "$current_bitrise"
            
            export PR="" PULL_REQUEST_ID=""
            export INTEGRATION_TEST_BINARY_PATH="$current_bitrise"
            
            $current_bitrise setup
            
            go test -v ./_tests/integration/ --tags linux_and_mac
            
            if [ "$(uname)" == "Linux" ]; then
                go test -v ./_tests/integration/ --tags linux_only
            fi
    - deploy-to-bitrise-io: { }

  test_binary_build:
    steps:
    - script@1:
        title: Set up Goreleaser
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            wget -O /tmp/goreleaser.deb https://github.com/goreleaser/goreleaser/releases/download/v1.19.2/goreleaser_1.19.2_amd64.deb
            sudo dpkg -i /tmp/goreleaser.deb
    - git-clone:
        inputs:
        - fetch_tags: "yes"
    - script:
        title: Goreleaser (create snapshot binaries)
        deps:
          brew:
          - name: goreleaser
        inputs:
        - content: |
            #!/usr/bin/env bash
            set -ex

            goreleaser release --snapshot --rm-dist
    - deploy-to-bitrise-io: { }

meta:
  bitrise.io:
    machine_type_id: elite-xl
    stack: linux-docker-android-22.04
